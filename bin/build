#! node

const fs = require('fs')
const pegjs = require('pegjs')

const pegjsPlugin = {
  name: 'pegjs',
  setup(build) {
    build.onLoad({ filter: /\.pegjs$/ }, ({ path }) => {
      const grammar = fs.readFileSync(path).toString()
      return {
        contents: pegjs.generate(grammar, {
          output: 'source',
          format: 'commonjs',
        }),
        loader: 'ts',
      }
    })
  },
}

function report(error, { warnings }) {
  if (error) {
    console.error('Build error', error)
  } else if (warnings.length > 0) {
    console.warn('Build succeeded with errors', warnings)
  } else {
    console.log('Build succeeded')
  }
}

const watch = process.argv.includes('--watch')

require('esbuild')
  .build({
    entryPoints: ['src/index.ts'],
    bundle: true,
    outfile: 'dist/main.js',
    platform: 'node',
    plugins: [pegjsPlugin],
    watch: watch ? { onRebuild: report } : false,
  })
  .then((result) => {
    if (watch) {
      console.log('Watching for changes')
    } else {
      report(null, result)
    }
  })
  .catch((error) => {
    console.error(error)
    process.exit(1)
  })
